{"version":3,"sources":["webpack:///./ui_components/ui_components.module.js","webpack:///./ui_components/artifactory_uploader/artifactory_uploader.module.js","webpack:///./ui_components/artifactory_uploader/artifactory_uploader.js"],"names":[],"mappings":"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","file":"artifactory_ui_components.3184.js","sourcesContent":["/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport Uploader from './artifactory_uploader/artifactory_uploader.module'\n\nangular.module('artifactory.ui_components', [\n    Uploader.name\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./ui_components/ui_components.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by idannaim on 8/4/15.\n */\nimport {ArtifactoryUploaderFactory} from './artifactory_uploader'\n\nexport default angular.module('artifactory_uploader', ['angularFileUpload'])\n        .service('ArtifactoryUploaderFactory', ArtifactoryUploaderFactory)\n\n\n// WEBPACK FOOTER //\n// ./ui_components/artifactory_uploader/artifactory_uploader.module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Created by idannaim on 8/4/15.\n */\nlet controller;\nclass ArtifactoryUploader {\n    constructor(FileUploader, _controller_) {\n        controller = _controller_;\n        this.fileUploader = new FileUploader();\n\n    }\n\n    /**\n     * Path on the server to upload files\n     * @param path\n     * @returns {ArtifactoryUploader}\n     */\n    setUrl(path) {\n        this.fileUploader.url = path;\n        return this;\n    }\n\n    /**\n     *\n     * @returns {the uploader instance}\n     */\n    getUploader() {\n        return this.fileUploader;\n    }\n\n    /**\n     *  Fires after adding a single file to the queue.\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnAfterAddingFile(func) {\n        this.fileUploader.onAfterAddingFile = func.bind(controller);\n        return this;\n    }\n\n    /**\n     * When adding a file failed.\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnWhenAddingFileFailed(func) {\n        this.fileUploader.onWhenAddingFileFailed = func.bind(this);\n        return this;\n    }\n\n    /**\n     * Fires after adding all the dragged or selected files to the queue.\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnAfterAddingAll(func) {\n        this.fileUploader.onAfterAddingAll = func.bind(controller);\n        return this;\n    }\n\n    /**\n     * Fires before uploading an item.\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnBeforeUploadItem(func) {\n        this.fileUploader.onBeforeUploadItem = func.bind(controller);\n        return this;\n    }\n\n    /**\n     *  On file upload progress\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnProgressItem(func) {\n        this.fileUploader.onProgressItem = func.bind(controller);\n        return this;\n    }\n\n    /**\n     * On file successfully uploaded\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnSuccessItem(func) {\n        this.fileUploader.onSuccessItem = func.bind(controller);\n        return this;\n    }\n\n    /**\n     *  On upload error\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n\n    setOnErrorItem(func) {\n        this.fileUploader.onErrorItem = func.bind(controller);\n        return this;\n    }\n\n    /**\n     * On cancel uploading\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnCancelItem(func) {\n        this.fileUploader.onCancelItem = func.bind(controller);\n        return this;\n    }\n\n    /**\n     * On file upload complete (independently of the success of the operation)\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnCompleteItem(func) {\n        this.fileUploader.onCompleteItem = func.bind(controller);\n        return this;\n    }\n\n    /**\n     * On upload queue progress\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnProgressAll(func) {\n        this.fileUploader.onProgressAll = func.bind(controller);\n        return this;\n    }\n\n    /**\n     *  On all loaded when uploading an entire queue, or on file loaded when uploading a single independent file\n     * @param func\n     * @returns {ArtifactoryUploader}\n     */\n    setOnCompleteAll(func) {\n        this.fileUploader.onCompleteAll = func.bind(controller);\n        return this;\n    }\n\n    /**\n     *\n     * @returns { files queue}\n     */\n    getQueue() {\n        return this.fileUploader.queue || [];\n    }\n\n    /**\n     * clear all files from queue\n     */\n    clearQueue() {\n        this.fileUploader.queue = [];\n    }\n\n    /**\n     * upload all files in queue\n     */\n    uploadAll() {\n        this.fileUploader.uploadAll();\n    }\n\n    /**\n     * remove file from queue\n     * @param fileItem\n     * @returns {queue}\n     */\n    removeFileFromQueue(fileItem) {\n        this.fileUploader.removeFromQueue(fileItem);\n        return this.fileUploader.queue;\n    }\n\n}\n\n\nexport class ArtifactoryUploaderFactory {\n    constructor(FileUploader) {\n        this.fileUploader = FileUploader;\n    }\n\n    getUploaderInstance(controller) {\n        return new ArtifactoryUploader(this.fileUploader, controller);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./ui_components/artifactory_uploader/artifactory_uploader.js"],"sourceRoot":""}