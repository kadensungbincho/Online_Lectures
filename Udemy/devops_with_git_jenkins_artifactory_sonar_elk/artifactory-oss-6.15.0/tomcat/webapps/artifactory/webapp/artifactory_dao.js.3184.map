{"version":3,"sources":["webpack:///./data/artifactory_dao_module.js","webpack:///./data/artifactory_notifications_interceptor.js","webpack:///./data/artifactory_dao.js","webpack:///./data/dao/admin_security_general_dao.js","webpack:///./data/dao/groups_dao.js","webpack:///./data/dao/group_permissions_dao.js","webpack:///./data/dao/http_sso_dao.js","webpack:///./data/dao/ssh_server_dao.js","webpack:///./data/dao/licenses_dao.js","webpack:///./data/dao/mail_dao.js","webpack:///./data/dao/passwords_encryption_dao.js","webpack:///./data/dao/proxies_dao.js","webpack:///./data/dao/reverse_proxies_dao.js","webpack:///./data/dao/register_pro_dao.js","webpack:///./data/dao/user_dao.js","webpack:///./data/dao/saml_dao.js","webpack:///./data/dao/bintray_dao.js","webpack:///./data/dao/property_sets_dao.js","webpack:///./data/dao/backup_dao.js","webpack:///./data/dao/browse_files_dao.js","webpack:///./data/dao/system_info_dao.js","webpack:///./data/dao/security_descriptor_dao.js","webpack:///./data/dao/config_descriptor_dao.js","webpack:///./data/dao/indexer_dao.js","webpack:///./data/dao/storage_summary_dao.js","webpack:///./data/dao/tree_browser_dao.js","webpack:///./data/dao/tree_node.js","webpack:///./data/dao/repo_data_dao.js","webpack:///./data/dao/cron_time_dao.js","webpack:///./data/dao/date_format_dao.js","webpack:///./data/dao/name_validator_dao.js","webpack:///./data/dao/unique_id_validator_dao.js","webpack:///./data/dao/xml_name_dao.js","webpack:///./data/dao/artifact/artifact_general_dao.js","webpack:///./data/dao/artifact/artifact_permissions_dao.js","webpack:///./data/dao/artifact/artifact_builds_dao.js","webpack:///./data/dao/artifact/artifact_viewsource_dao.js","webpack:///./data/dao/artifact/artifact_property_dao.js","webpack:///./data/dao/artifact/artifact_watches_dao.js","webpack:///./data/dao/artifact/artifact_xray_dao.js","webpack:///./data/dao/artifact/artifact_actions_dao.js","webpack:///./data/dao/predefine_values_dao.js","webpack:///./data/dao/repo_property_set_dao.js","webpack:///./data/dao/artifact/artifact_search_dao.js","webpack:///./data/dao/artifact/artifact_package_search_dao.js","webpack:///./data/dao/dependency_declaration_dao.js","webpack:///./data/dao/artifact/artifact_deploy_dao.js","webpack:///./data/dao/artifact/artifact_views_dao.js","webpack:///./data/dao/footer_dao.js","webpack:///./data/dao/crowd_integration_dao.js","webpack:///./data/dao/export_dao.js","webpack:///./data/dao/import_dao.js","webpack:///./data/dao/maintenance_dao.js","webpack:///./data/dao/ldap_dao.js","webpack:///./data/dao/docker_status_dao.js","webpack:///./data/dao/ldap_groups_dao.js","webpack:///./data/dao/push_to_bintray_dao.js","webpack:///./data/dao/distribution_dao.js","webpack:///./data/dao/general_config_dao.js","webpack:///./data/dao/signing_keys_dao.js","webpack:///./data/dao/trusted_keys_dao.js","webpack:///./data/dao/access_tokens_dao.js","webpack:///./data/dao/keystore_dao.js","webpack:///./data/dao/builds/builds_dao.js","webpack:///./data/dao/bundles_dao.js","webpack:///./data/dao/user_profile_dao.js","webpack:///./data/dao/permissions_dao.js","webpack:///./data/dao/checksums_dao.js","webpack:///./data/dao/filtered_resource_dao.js","webpack:///./data/dao/artifact/artifact_licenses_dao.js","webpack:///./data/dao/home_page_dao.js","webpack:///./data/dao/set_me_up_dao.js","webpack:///./data/dao/basic_config_dao.js","webpack:///./data/dao/system_logs_dao.js","webpack:///./data/dao/repositories_dao.js","webpack:///./data/dao/repositories_layouts_dao.js","webpack:///./data/dao/ha_dao.js","webpack:///./data/dao/ha_licenses_dao.js","webpack:///./data/dao/stash_results_dao.js","webpack:///./data/dao/oauth_dao.js","webpack:///./data/dao/support_page_dao.js","webpack:///./data/dao/server_time_dao.js","webpack:///./data/dao/ssh_client_dao.js","webpack:///./data/dao/binary_providers_info_dao.js","webpack:///./data/dao/xray_dao.js","webpack:///./data/dao/global_replications_config_dao.js","webpack:///./data/dao/sumologic_config_dao.js","webpack:///./data/dao/onboarding_dao.js","webpack:///./data/dao/ssl_certificates_dao.js","webpack:///./data/dao/packages_dao.js","webpack:///./data/dao/jcr_eula_dao.js","webpack:///./data/dao/jcr_newsletter_dao.js","webpack:///./data/dao/mini_xray_dao.js"],"names":[],"mappings":"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","file":"artifactory_dao.3184.js","sourcesContent":["/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {artifactoryNotificationsInterceptor} from \"./artifactory_notifications_interceptor.js\";\nimport {ArtifactoryDao, ArtifactoryDaoFactory} from \"./artifactory_dao.3184.js\";\nimport {AdminSecurityGeneralDao} from \"./dao/admin_security_general_dao\";\nimport {GroupsDao} from \"./dao/groups_dao\";\nimport {GroupPermissionsDao} from \"./dao/group_permissions_dao\";\nimport {HttpSsoDao} from \"./dao/http_sso_dao\";\nimport {SshServerDao} from \"./dao/ssh_server_dao\";\nimport {LicensesDao} from \"./dao/licenses_dao\";\nimport {MailDao} from \"./dao/mail_dao\";\nimport {PasswordsEncryptionDao} from \"./dao/passwords_encryption_dao\";\nimport {ProxiesDao} from \"./dao/proxies_dao\";\nimport {ReverseProxiesDao} from \"./dao/reverse_proxies_dao\";\nimport {RegisterProDao} from \"./dao/register_pro_dao\";\nimport {UserDao} from \"./dao/user_dao\";\nimport {SamlDao} from \"./dao/saml_dao\";\nimport {BintrayDao} from \"./dao/bintray_dao\";\nimport {PropertyFactory, PropertySetFactory, PropertySetsDao} from \"./dao/property_sets_dao\";\nimport {BackupDao} from \"./dao/backup_dao\";\nimport {BrowseFilesDao} from \"./dao/browse_files_dao\";\nimport {SystemInfoDao} from \"./dao/system_info_dao\";\nimport {SecurityDescriptorDao} from \"./dao/security_descriptor_dao\";\nimport {ConfigDescriptorDao} from \"./dao/config_descriptor_dao\";\nimport {IndexerDao} from \"./dao/indexer_dao\";\nimport {StorageSummaryDao} from \"./dao/storage_summary_dao\";\nimport {TreeBrowserDao} from \"./dao/tree_browser_dao\";\nimport {TreeNodeFactory} from \"./dao/tree_node\";\nimport {RepoDataDao} from \"./dao/repo_data_dao\";\nimport {CronTimeDao} from \"./dao/cron_time_dao\";\nimport {DateFormatDao} from \"./dao/date_format_dao\";\nimport {NameValidatorDao} from \"./dao/name_validator_dao\";\nimport {UniqueIdValidatorDao} from \"./dao/unique_id_validator_dao\";\nimport {XmlNameDao} from \"./dao/xml_name_dao\";\nimport {ArtifactGeneralDao} from \"./dao/artifact/artifact_general_dao\";\nimport {ArtifactPermissionsDao} from \"./dao/artifact/artifact_permissions_dao\";\nimport {ArtifactBuildsDao} from \"./dao/artifact/artifact_builds_dao\";\nimport {ArtifactViewSourceDao} from \"./dao/artifact/artifact_viewsource_dao\";\nimport {ArtifactPropertyDao} from \"./dao/artifact/artifact_property_dao\";\nimport {ArtifactWatchesDao} from \"./dao/artifact/artifact_watches_dao\";\nimport {ArtifactXrayDao} from \"./dao/artifact/artifact_xray_dao\";\nimport {ArtifactActionsDao} from \"./dao/artifact/artifact_actions_dao\";\nimport {PredefineDao} from \"./dao/predefine_values_dao\";\nimport {RepoPropertySetDao} from \"./dao/repo_property_set_dao\";\nimport {ArtifactSearchDao} from \"./dao/artifact/artifact_search_dao\";\nimport {ArtifactPackageSearchDao} from \"./dao/artifact/artifact_package_search_dao\";\nimport {DependencyDeclarationDao} from \"./dao/dependency_declaration_dao\";\nimport {ArtifactDeployDao} from \"./dao/artifact/artifact_deploy_dao\";\nimport {ArtifactViewsDao} from \"./dao/artifact/artifact_views_dao\";\nimport {FooterDao} from \"./dao/footer_dao\";\nimport {CrowdIntegrationDao} from \"./dao/crowd_integration_dao\";\nimport {ExportDao} from \"./dao/export_dao\";\nimport {ImportDao} from \"./dao/import_dao\";\nimport {MaintenanceDao} from \"./dao/maintenance_dao\";\nimport {LdapDao} from \"./dao/ldap_dao\";\nimport {DockerStatusDao} from \"./dao/docker_status_dao\";\nimport {LdapGroupsDao} from \"./dao/ldap_groups_dao\";\nimport {PushToBintrayDao} from \"./dao/push_to_bintray_dao\";\nimport {DistributionDao} from \"./dao/distribution_dao\";\nimport {GeneralConfigDao} from \"./dao/general_config_dao\";\nimport {SigningKeysDao} from \"./dao/signing_keys_dao\";\nimport {TrustedKeysDao} from \"./dao/trusted_keys_dao\";\nimport {AccessTokensDao} from \"./dao/access_tokens_dao\";\nimport {KeystoreDao} from \"./dao/keystore_dao\";\nimport {BuildsDao} from \"./dao/builds/builds_dao\";\nimport {BundlesDao} from \"./dao/bundles_dao\";\nimport {UserProfileDao} from \"./dao/user_profile_dao\";\nimport {PermissionsDao} from \"./dao/permissions_dao\";\nimport {ChecksumsDao} from \"./dao/checksums_dao\";\nimport {FilteredResourceDao} from \"./dao/filtered_resource_dao\";\nimport {ArtifactLicensesDao} from \"./dao/artifact/artifact_licenses_dao\";\nimport {HomePageDao} from \"./dao/home_page_dao\";\nimport {SetMeUpDao} from \"./dao/set_me_up_dao\";\nimport {BasicConfigDao} from \"./dao/basic_config_dao\";\nimport {SystemLogsDao} from \"./dao/system_logs_dao\";\nimport {RepositoriesDao} from \"./dao/repositories_dao\";\nimport {RepositoriesLayoutsDao} from \"./dao/repositories_layouts_dao\";\nimport {HaDao} from \"./dao/ha_dao\";\nimport {HaLicensesDao} from \"./dao/ha_licenses_dao\";\nimport {StashResultsDao} from \"./dao/stash_results_dao\";\nimport {OAuthDao} from \"./dao/oauth_dao\";\nimport {SupportPageDao} from \"./dao/support_page_dao\";\nimport {ServerTimeDao} from \"./dao/server_time_dao\";\nimport {SshClientDao} from \"./dao/ssh_client_dao\";\nimport {BinaryProvidersInfoDao} from \"./dao/binary_providers_info_dao\";\nimport {XrayDao} from \"./dao/xray_dao\";\nimport {GlobalReplicationsConfigDao} from \"./dao/global_replications_config_dao\";\nimport {SumoLogicConfigDao} from \"./dao/sumologic_config_dao\";\nimport {OnboardingDao} from \"./dao/onboarding_dao\";\nimport {SslCertificateDao} from \"./dao/ssl_certificates_dao\";\nimport {PackagesDAO} from \"./dao/packages_dao\";\nimport {JcrEulaDao} from \"./dao/jcr_eula_dao\";\nimport {JcrNewsletterDao} from \"./dao/jcr_newsletter_dao\";\nimport {MiniXrayDao} from \"./dao/mini_xray_dao\";\n\nangular.module('artifactory.dao', ['ngResource', 'artifactory.services', 'jfrog.ui.essentials'])\n    .factory('artifactoryNotificationsInterceptor', artifactoryNotificationsInterceptor)\n    .service('ArtifactoryDao', ArtifactoryDao)\n    .factory('ArtifactoryDaoFactory', ArtifactoryDaoFactory)\n    .service('AdminSecurityGeneralDao', AdminSecurityGeneralDao)\n    .service('GroupsDao', GroupsDao)\n    .service('GroupPermissionsDao', GroupPermissionsDao)\n    .service('HttpSsoDao', HttpSsoDao)\n    .service('SshServerDao', SshServerDao)\n    .service('LicensesDao', LicensesDao)\n    .service('HaLicensesDao', HaLicensesDao)\n    .service('MailDao', MailDao)\n    .service('PasswordsEncryptionDao', PasswordsEncryptionDao)\n    .factory('ProxiesDao', ProxiesDao)\n    .factory('ReverseProxiesDao', ReverseProxiesDao)\n    .service('RegisterProDao', RegisterProDao)\n    .service('UserDao', UserDao)\n    .service('SamlDao', SamlDao)\n    .service('BintrayDao', BintrayDao)\n    .factory('PropertySetsDao', PropertySetsDao)\n    .factory('Property', PropertyFactory)\n    .factory('PropertySet', PropertySetFactory)\n    .factory('BackupDao', BackupDao)\n    .service('BrowseFilesDao', BrowseFilesDao)\n    .service('SystemInfoDao', SystemInfoDao)\n    .service('SecurityDescriptorDao', SecurityDescriptorDao)\n    .service('ConfigDescriptorDao', ConfigDescriptorDao)\n    .service('IndexerDao', IndexerDao)\n    .service('StorageSummaryDao', StorageSummaryDao)\n    .service('TreeBrowserDao', TreeBrowserDao)\n    .factory('TreeNode', TreeNodeFactory)\n    .service('RepoDataDao', RepoDataDao)\n    .service('CronTimeDao', CronTimeDao)\n    .service('DateFormatDao', DateFormatDao)\n    .service('NameValidatorDao', NameValidatorDao)\n    .service('UniqueIdValidatorDao', UniqueIdValidatorDao)\n    .service('XmlNameDao', XmlNameDao)\n    .service('ArtifactGeneralDao', ArtifactGeneralDao)\n    .service('ArtifactPermissionsDao', ArtifactPermissionsDao)\n    .service('ArtifactBuildsDao', ArtifactBuildsDao)\n    .service('ArtifactViewSourceDao', ArtifactViewSourceDao)\n    .service('ArtifactPropertyDao', ArtifactPropertyDao)\n    .factory('ArtifactWatchesDao', ArtifactWatchesDao)\n    .factory('ArtifactXrayDao', ArtifactXrayDao)\n    .factory('ArtifactActionsDao', ArtifactActionsDao)\n    .service('PredefineDao', PredefineDao)\n    .service('RepoPropertySetDao', RepoPropertySetDao)\n    .service('ArtifactSearchDao', ArtifactSearchDao)\n    .service('ArtifactPackageSearchDao', ArtifactPackageSearchDao)\n    .service('DependencyDeclarationDao', DependencyDeclarationDao)\n    .service('ArtifactDeployDao', ArtifactDeployDao)\n    .service('ArtifactViewsDao', ArtifactViewsDao)\n    .service('FooterDao', FooterDao)\n    .service('CrowdIntegrationDao', CrowdIntegrationDao)\n    .service('ExportDao', ExportDao)\n    .service('ImportDao', ImportDao)\n    .service('MaintenanceDao', MaintenanceDao)\n    .service('LdapDao', LdapDao)\n    .service('LdapGroupsDao', LdapGroupsDao)\n    .service('PushToBintrayDao', PushToBintrayDao)\n    .service('DistributionDao', DistributionDao)\n    .service('GeneralConfigDao', GeneralConfigDao)\n    .service('SigningKeysDao', SigningKeysDao)\n    .service('TrustedKeysDao', TrustedKeysDao)\n    .service('AccessTokensDao', AccessTokensDao)\n    .service('KeystoreDao', KeystoreDao)\n    .service('BuildsDao', BuildsDao)\n    .service('BundlesDao', BundlesDao)\n    .service('UserProfileDao', UserProfileDao)\n    .service('PermissionsDao', PermissionsDao)\n    .service('ChecksumsDao', ChecksumsDao)\n    .service('FilteredResourceDao', FilteredResourceDao)\n    .service('ArtifactLicensesDao', ArtifactLicensesDao)\n    .service('HomePageDao', HomePageDao)\n    .service('SetMeUpDao', SetMeUpDao)\n    .service('BasicConfigDao', BasicConfigDao)\n    .service('SystemLogsDao', SystemLogsDao)\n    .service('RepositoriesDao', RepositoriesDao)\n    .service('DockerStatusDao', DockerStatusDao)\n    .service('RepositoriesLayoutsDao', RepositoriesLayoutsDao)\n    .service('StashResultsDao', StashResultsDao)\n    .service('OAuthDao', OAuthDao)\n    .service('SupportPageDao', SupportPageDao)\n    .service('ServerTimeDao', ServerTimeDao)\n    .service('SshClientDao', SshClientDao)\n    .service('BinaryProvidersInfoDao', BinaryProvidersInfoDao)\n    .service('GlobalReplicationsConfigDao', GlobalReplicationsConfigDao)\n    .service('XrayDao', XrayDao)\n    .service('SumoLogicConfigDao', SumoLogicConfigDao)\n    .service('OnboardingDao', OnboardingDao)\n    .service('SslCertificateDao', SslCertificateDao)\n    .service('PackagesDAO', PackagesDAO)\n    .service('JcrEulaDao', JcrEulaDao)\n    .service('JcrNewsletterDao', JcrNewsletterDao)\n    .service('MiniXrayDao', MiniXrayDao)\n    .factory('HaDao', HaDao);\n\n\n\n// WEBPACK FOOTER //\n// ./data/artifactory_dao_module.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * returns a function that accept some custom info\n * and returns the interceptor object.\n * intent to be injected and use in DAO's\n *\n * @returns {Function}\n */\nexport function artifactoryNotificationsInterceptor($q, JFrogNotifications) {\n\n    /**\n     * accept an additional info that can be used\n     * in the returned interceptor object\n     *\n     * @returns {{response: Function, responseError: Function}}\n     */\n    return {\n        response: function (res) {\n            if (res.data && !(res.config && res.config.params && res.config.params.$suppress_toaster)) {\n                if (!res.data.url) {\n                    if (res.data.info || res.data.warn) {\n                        if ((res.data.info && res.data.info.indexOf('<a') !== -1 && res.data.info.indexOf('</a>') !== -1) ||\n                            (res.data.warn && res.data.warn.indexOf('<a') !== -1 && res.data.warn.indexOf('</a>') !== -1)) {\n                            JFrogNotifications.create(res.data, true);\n                        }\n                        else {\n                            JFrogNotifications.create(res.data);\n                        }\n                    } else if (res.data.feedbackMsg) {\n                        JFrogNotifications.create(res.data.feedbackMsg);\n                    }\n                }\n            }\n            return res;\n        },\n        responseError: function (res) {\n            // Response error as array:\n            if (res.data && res.data.errors && res.data.errors.length && !(res.config && res.config.params && res.config.params.$suppress_toaster)) {\n                try {\n                    JFrogNotifications.create(JSON.parse(res.data.errors[0].message));\n                }\n                catch (e) { // message is not a json object but a simple string\n                    JFrogNotifications.create({error: res.data.errors[0].message});\n                }\n            }\n            // Response error as single object:\n            else if (res.data && (res.data.error || res.data.warn) && !(res.config && res.config.params && res.config.params.$suppress_toaster)) {\n                JFrogNotifications.create(res.data);\n            }\n            return $q.reject(res);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/artifactory_notifications_interceptor.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * base class for DAO's\n */\nexport class ArtifactoryDao {\n\n    /**\n     * inject services provided by the sub class\n     * @param $resource\n     * @param RESOURCE\n     */\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor, JFrogUIUtils) {\n        this.artifactoryNotificationsInterceptor = artifactoryNotificationsInterceptor;\n        this.RESOURCE = RESOURCE;\n        this.JFrogUIUtils = JFrogUIUtils;\n        this.$resource = $resource;\n        this._url = null;\n        this._prototype = null;\n\n        /**\n         * default custom actions\n         * @type {{update: {method: string, interceptor: *}, save: {method: string, interceptor: *}, delete: {method: string, interceptor: *}}}\n         * @private\n         */\n        this.setDefaults({});\n        this.setCustomActions({\n            'update': {\n                method: 'PUT',\n                notifications: true\n            },\n            'delete': {\n                method: 'DELETE',\n                notifications: true\n            },\n            'fetch': { // POST which is actually getting data\n                method: 'POST',\n                notifications: false\n            },\n            'save': {\n                method: 'POST',\n                notifications: true\n            }\n        });\n    }\n\n    /**\n     * full url for the resource, include params\n     * @param {string} url\n     */\n    setUrl(url) {\n        this._url = url;\n        return this;\n    }\n\n    /**\n     * relative path for the resource, include params\n     * @param {string} path\n     */\n    setPath(path) {\n        this._url = this.RESOURCE.API_URL + path;\n        return this;\n    }\n\n    /**\n     * set defaults method for custom actions\n     * @param {object} options - Object of default properties. Possible keys and values:\n     ** @param {string} method - GET, POST, PUT, DELETE, PATCH, etc.\n     */\n    setDefaults(options) {\n        this._defaults = this._defaults || {};\n        angular.extend(this._defaults, options);\n        return this;\n    }\n\n    /**\n     * extend the default actions object\n     * @param {object} actionsObject\n     */\n    setCustomActions(actionsObject) {\n        this._customActions = this._customActions || {};\n        Object.keys(actionsObject).forEach((action) => {\n            let actionParams = actionsObject[action];\n            if (!actionParams.method && this._defaults.method) {\n                actionParams.method = this._defaults.method;\n            }\n            if (actionParams.path) {\n                actionParams.url = this.RESOURCE.API_URL + actionParams.path;\n                delete actionParams.path;\n            }\n            if (angular.isDefined(actionParams.notifications) && actionParams.notifications) {\n                if (actionParams.notifications) actionParams.interceptor = this.artifactoryNotificationsInterceptor;\n            }\n            if (angular.isDefined(actionParams.notifications)) {\n                delete actionParams.notifications;\n            }\n            if (this._customActions[action]) {\n                angular.extend(this._customActions[action], actionParams);\n            } else {\n                this._customActions[action] = angular.copy(actionParams);\n            }\n        });\n        return this;\n    }\n\n    /**\n     * extend the resources prototype\n     * @param {object} prototype\n     */\n    extendPrototype(prototype) {\n        this._prototype = prototype;\n        return this;\n    }\n\n    /**\n     * supply a transform function\n     * @callback {function} transform function\n     */\n    transformResponse(callback) {\n        this.transformResponse = callback;\n        return this;\n    }\n\n    /**\n     *returns an instance of the resource object\n     * @returns {Object|*} $resource\n     */\n    getInstance() {\n        let result = this.$resource(this._url, null, this._customActions);\n        if (this._prototype) {\n            angular.extend(result.prototype, this._prototype);\n        }\n\n        let cancellableRequests = {};\n\n        Object.keys(result).forEach(key => {\n            if (this._customActions[key] && this._customActions[key].authenticate) {\n                result[key].authenticate = (authentication) => {\n\n                    let token = this.JFrogUIUtils.b64EncodeUnicode(`${authentication.username}:${authentication.password}`);\n\n                    this._customActions[key].headers = {'Authorization': 'Basic ' + token}\n                    delete this._customActions[key].authenticate;\n                }\n            }\n            else if (this._customActions[key] && this._customActions[key].cancellable) {\n                let origMethod = result[key];\n                result[key] = (...params) => {\n                    let result = origMethod(...params);\n                    if (!cancellableRequests[key]) cancellableRequests[key] = [];\n                    cancellableRequests[key].push(result)\n                    return result;\n                }\n                if (!result.$cancelAll) {\n                    result.$cancelAll = (methodName) => {\n                        if (cancellableRequests[methodName]) {\n                            cancellableRequests[methodName].forEach(request => {\n                                if (request.$cancelRequest) request.$cancelRequest();\n                            })\n                            cancellableRequests[methodName] = [];\n                        }\n                    }\n                }\n            }\n        })\n\n        return result;\n    }\n}\n\nexport function ArtifactoryDaoFactory($resource, RESOURCE, artifactoryNotificationsInterceptor, JFrogUIUtils) {\n    return function () {\n        return new ArtifactoryDao($resource, RESOURCE, artifactoryNotificationsInterceptor, JFrogUIUtils);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/artifactory_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class AdminSecurityGeneralDao {\n    constructor(ArtifactoryDaoFactory, RESOURCE) {\n\t    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.SECURITY_CONFIG)\n            .setCustomActions({\n                'lockUsers': {\n                    path: RESOURCE.SECURITY_CONFIG + '/lockUsers',\n                    method: 'POST',\n                    notifications: true\n                },\n                'unlockUsers': {\n                    path: RESOURCE.SECURITY_CONFIG + '/unlockUsers',\n                    method: 'POST',\n                    notifications: true\n                },\n                'unlockAllUsers': {\n                    path: RESOURCE.SECURITY_CONFIG + '/unlockAllUsers',\n                    method: 'POST',\n                    notifications: true\n                }\n            })\n            .getInstance();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/admin_security_general_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from \"../artifactory_dao\";\n\nexport class GroupsDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n        this.setUrl(RESOURCE.API_URL + RESOURCE.GROUPS + '/:prefix/:name');\n\n        this.setCustomActions({\n            'getAll': {\n                method: 'GET',\n                isArray: true\n            },\n            'getSingle': {\n                method: 'GET',\n                params: {name: '@name'},\n                notifications: true\n            },\n            'update': {\n                method: 'PUT',\n                params: {name: '@name'},\n                notifications: true\n            },\n            'create': {\n                method: 'POST',\n                notifications: true\n            },\n            'delete': {\n                method: 'POST',\n                params: {prefix: 'delete'},\n                notifications: true\n            }\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/groups_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class GroupPermissionsDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.GROUP_PERMISSION);\n\n        this.setCustomActions({\n            'get': {\n                method: 'POST',\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/group_permissions_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class HttpSsoDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.HTTPSSO)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/http_sso_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class SshServerDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.SSHSERVER)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/ssh_server_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class LicensesDao {\n\n    constructor(RESOURCE, ArtifactoryDaoFactory) {\n        return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.LICENSES + \"/:action/:name\")\n            .setCustomActions({\n                'getLicense': {\n                    method: 'GET',\n                    params: {action: 'crud',name: '@name'},\n                    notifications: true,\n                    isArray: true\n                },\n                'getSingleLicense': {\n                    method: 'GET',\n                    params: {action: 'crud', name: '@name'},\n                    notifications: true,\n                },\n                'update': {\n                    method: 'PUT',\n                    params: {action: 'crud', name: '@name'},\n                    notifications: true,\n                },\n                'create': {\n                    method: 'POST',\n                    params: {action: 'crud',name: '@name'},\n                    notifications: true,\n                },\n                'delete': {\n                    method: 'POST',\n                    params: {action: 'deleteLicense',name: '@name'},\n                    notifications: true\n                }\n\n            })\n            .getInstance();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/licenses_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class MailDao extends ArtifactoryDao{\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor){\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL+RESOURCE.MAIL);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/mail_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class PasswordsEncryptionDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.CRYPTO + \"/:action\");\n\n        this.setCustomActions({\n            'encrypt': {\n                method: 'POST',\n                params: {action: 'encrypt'},\n                notifications: true\n            },\n\n            'decrypt': {\n                method: 'POST',\n                params: {action: 'decrypt'},\n                notifications: true\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/passwords_encryption_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function ProxiesDao(RESOURCE, ArtifactoryDaoFactory) {\n\treturn ArtifactoryDaoFactory()\n    \t.setPath(RESOURCE.PROXIES + \"/:prefix/:key\")\n        .setCustomActions({\n            'delete': {\n                method : 'POST',\n                params: {prefix: 'deleteProxies'}\n            },\n            'update': {\n                method : 'PUT',\n                params :{prefix: 'crud', key :'@key'}\n            },\n            'get': {\n                method : 'GET',\n                params :{prefix: 'crud', key :'@key'},\n                isArray: true\n            },\n            'getSingleProxy': {\n                    method: 'GET',\n                    params: {prefix: 'crud', key: '@key'}\n            },\n            'getProxyKeys': {\n                method : 'GET',\n                params: {prefix: 'proxyKeys'},\n                isArray: true\n            }\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/proxies_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function ReverseProxiesDao(RESOURCE, ArtifactoryDaoFactory) {\n\treturn ArtifactoryDaoFactory()\n    \t.setPath(RESOURCE.REVERSE_PROXIES + \"/:prefix/:key\")\n        .setCustomActions({\n            'delete': {\n                method : 'POST',\n                params: {prefix: 'deleteReverseProxies'}\n            },\n            'update': {\n                method : 'PUT',\n                params :{prefix: 'crud', key :'@key'}\n            },\n            'get': {\n                method : 'GET',\n                params :{prefix: 'crud', key :'@key'}\n            },\n            'checkPort': {\n                    method: 'GET',\n                    params: {prefix: 'checkPort', key: '@port'}\n            }\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/reverse_proxies_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function RegisterProDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.REGISTER_PRO)\n            .setCustomActions({\n                'update': {\n                    notifications: true\n                }\n\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/register_pro_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from \"../artifactory_dao\";\n\nexport class UserDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.USERS + '/:prefix/:name');\n\n        this.setCustomActions({\n            'getAll': {\n                method: 'GET',\n                isArray: true\n            },\n            'getSingle': {\n                method: 'GET',\n                params: {name: '@name'},\n                notifications: true\n            },\n            'create': {\n                method: 'POST',\n                notifications: true\n            },\n            'update': {\n                method: 'PUT',\n                params: {name: '@name'},\n                notifications: true\n            },\n            'delete': {\n                method: 'POST',\n                params: {prefix: 'userDelete'},\n                notifications: true\n            },\n            'getAllGroups': {\n                method: 'GET',\n                params: {prefix: 'groups'},\n                isArray: true\n            },\n            'getPermissions': {\n                method: 'GET',\n                params: {name: '@name', prefix: 'permissions'},\n            },\n            'checkExternalStatus': {\n                method: 'POST',\n                params: {prefix: 'externalStatus'},\n                notifications: true\n            },\n            'changePassword': {\n                path: '/auth/changePassword',\n                method: 'POST',\n                params: {prefix: 'changePassword'},\n                notifications: true\n            },\n            'expirePassword': {\n                method: 'POST',\n                params: {prefix: '@username', name: 'expirePassword'},\n                notifications: true\n            },\n            'unExpirePassword': {\n                method: 'POST',\n                params: {prefix: '@username', name: 'unexpirePassword'},\n                notifications: true\n            },\n            'expireAllPassword': {\n                method: 'POST',\n                params: {prefix: 'expirePasswordForAllUsers'},\n                notifications: true\n            },\n            'unExpireAllPassword': {\n                method: 'POST',\n                params: {prefix: 'unexpirePasswordForAllUsers'},\n                notifications: true\n            }\n\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/user_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function SamlDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.SAML_CONFIG)\n            .setCustomActions({\n                downloadCertificate: {\n                    method: 'GET',\n                    path: RESOURCE.SAML_CONFIG + '/key/public'\n                },\n                regenerateCertificate: {\n                    method: 'PUT',\n                    path: RESOURCE.SAML_CONFIG + '/key/public/regenerate'\n                }\n            });\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/saml_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class BintrayDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.BINTRAY_SETTING);\n        this.setCustomActions({\n            'fetch': {\n                notifications: true\n            },\n            'info': {\n                path: RESOURCE.BINTRAY_SETTING + \"/info\",\n                params: {sha1: '@sha1'}\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/bintray_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function PropertySetsDao(ArtifactoryDaoFactory, RESOURCE) {\n    return ArtifactoryDaoFactory()\n    \t.setPath(RESOURCE.PROPERTY_SETS + \"/:action/:name\")\n        .setCustomActions({\n            'get': {\n                params: {name: '@name'}\n            },\n            'update': {\n                params: {name: '@name'}\n            },\n            'delete': {\n                method: 'POST',\n                params: {action: 'deletePropertySet'}\n            },\n                'query': {\n                    isArray: true,\n                    params: {name: '@name', isRepoForm: '@isRepoForm'}\n                }\n            })\n    \t.getInstance();\n}\n\n\nexport class Property {\n    constructor(data) {\n        data = data || {};\n        data.propertyType = data.propertyType || \"ANY_VALUE\";\n\n        data.predefinedValues = data.predefinedValues || [];\n        angular.extend(this, data);\n    }\n    getDisplayType() {\n        let type = Property.propertyTypesMap[this.propertyType];\n        return type ? type.text : null;\n    }\n    getDefaultValues() {\n        return _.where(this.predefinedValues, {defaultValue: true});\n    }\n\n    getPredefinedValue(value) {\n        return _.findWhere(this.predefinedValues, {value: value});\n    }\n    addPredefinedValue(newValue) {\n        this.predefinedValues.push({value: newValue, defaultValue: false});\n    }\n}\n\n// Create an array and map of types for easy access\nlet anyValue = {value: 'ANY_VALUE', text: 'Any Value'};\nlet singleSelect = {value: 'SINGLE_SELECT', text: 'Single Select'};\nlet multiSelect = {value: 'MULTI_SELECT', text: 'Multi Select'};\n\nProperty.propertyTypes = [anyValue, singleSelect, multiSelect];\nProperty.propertyTypesMap = {\n    ANY_VALUE: anyValue,\n    SINGLE_SELECT: singleSelect,\n    MULTI_SELECT: multiSelect\n};\n\nexport function PropertyFactory() {\n    return Property;\n}\n\nexport class PropertySet {\n    constructor(data) {\n        data = data || {};\n        data.properties = data.properties || [];\n        angular.extend(this, data);\n        this.properties = this.properties.map((property) => new Property(property));\n    }\n    getPropertyByName(propertyName) {\n        return _.findWhere(this.properties, {name: propertyName});\n    }\n    addProperty(property) {\n        this.properties.push(property);\n    }\n    removeProperty(propertyName) {\n        _.remove(this.properties, {name: propertyName});\n    }\n}\nexport function PropertySetFactory() {\n    return PropertySet;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/property_sets_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function BackupDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.BACKUP + \"/:key/:action\")\n        .setCustomActions({\n            'delete': {\n                params: {key: '@key'}\n            },\n            'get': {\n                params: {key: '@key'}\n            },\n            'update': {\n                params: {key: '@key'}\n            },\n            'runNow': {\n                method: 'POST',\n                params: {key: '@key', action: 'runnow'},\n                notifications: true\n            }\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/backup_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class BrowseFilesDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.BROWSE_FILESYSTEM);\n        this.setCustomActions({\n            'query': {\n                method: 'GET',\n                params: {path: '@path'}\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/browse_files_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class SystemInfoDao extends ArtifactoryDao{\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL+RESOURCE.SYSTEM_INFO);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/system_info_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class SecurityDescriptorDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.SECURITY_DESCRIPTOR);\n\n        this.setCustomActions({\n            'get': {\n                method: 'GET',\n                notifications: true\n            },\n            'update': {\n                method: 'PUT',\n                notifications: true\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/security_descriptor_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class ConfigDescriptorDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.CONFIG_DESCRIPTOR);\n        this.setCustomActions({\n            'get': {\n                method: 'GET',\n                notifications: true\n            },\n            'update': {\n                method: 'PUT',\n                notifications: true\n            }\n        });\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/config_descriptor_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class IndexerDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.INDEXER);\n\n        this.setCustomActions({\n            'run': {\n                method: 'POST',\n                notifications: true\n            },\n            'save': {\n                method: 'PUT',\n                notifications: true\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/indexer_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class StorageSummaryDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.STORAGE_SUMMARY)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/storage_summary_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nconst ARCHIVE_MARKER = '!';\nconst COMPACT_FOLDERS_KEY = 'COMPACT_FOLDERS';\n\nexport class TreeBrowserDao {\n    constructor(RESOURCE, ArtifactoryHttpClient, $q, $injector, ArtifactoryStorage, FooterDao) {\n        this.$q = $q;\n        this.TreeNode = $injector.get('TreeNode');\n        this.RESOURCE = RESOURCE;\n        this.footerDao = FooterDao;\n        this.artifactoryHttpClient = ArtifactoryHttpClient;\n        this.artifactoryStorage = ArtifactoryStorage;\n        this.compactFolders = ArtifactoryStorage.getItem(COMPACT_FOLDERS_KEY, /* defaultValue = */ true);\n        this.roots = null;\n    }\n\n    setCompactFolders(value) {\n        this.compactFolders = value;\n        this.artifactoryStorage.setItem(COMPACT_FOLDERS_KEY, this.compactFolders);\n    }\n\n    getCompactFolders() {\n        return this.compactFolders;\n    }\n\n    // get all repositories (roots) and cache them\n    // or return the cached promise\n    getRoots(force = false, continueState, filter, sorting, mustInclude, repositoryKeys) {\n        if (force || !this.roots) {\n            this.roots = this._loadChildren({type: 'root'}, null, continueState, filter, sorting, mustInclude, repositoryKeys);\n        }\n        return this.roots;\n    }\n\n\tgetSetMeUpRepos(payload) {\n\t\tthis.roots = this._loadSetMeUpRepos(payload);\n\t\treturn this.roots;\n\t}\n\n\t_loadSetMeUpRepos(node, parent) {\n\t\treturn this.artifactoryHttpClient.post(\n\t\t\tthis.RESOURCE.TREE_BROWSER + '?compacted=true&$no_spinner=true', node)\n\t\t           .then(result => {\n\t\t\t\t           const response = this._transformData(result.data.data, parent);\n\t\t\t\t           response.continueState = result.data.continueState;\n\t\t\t\t           return response;\n\t\t\t           }\n\t\t           );\n\n\t}\n\n\t// invalidate the cached promise\n\tinvalidateRoots() {\n\t\tthis.roots = null;\n\t}\n\n    findRepo(repoKey) {\n        return this.getRoots().then((roots) => {\n            return _.findWhere(roots, {repoKey: repoKey});\n        });\n    }\n\n    findNodeByFullPath(path, includeArchives = true) {\n        if (typeof(path) === 'string') path = path.split('/');\n        path = path.map((pathElement) => _.trimRight(pathElement, ARCHIVE_MARKER));\n        if (!path.length) return this.$q.when(null);\n        let pathElement = path.shift();\n        // Find child:\n        return this.getRoots(false, null, null, null, pathElement).then((roots) => {\n            roots = roots.data;\n            return _.findWhere(roots, {text: pathElement});\n        })\n        .then((root) => {\n            // Recursively look for rest of fullpath:\n            if (root) return root.findNodeByPath(path, 0, includeArchives);\n            else return this;\n        }).catch(() => null);\n    }\n\n    _loadChildren(node, parent, continueState, filter = {}, sorting, mustInclude, repositoryKeys) {\n        let compact = this.compactFolders && !node.trashcan; //Don't compact the repos level under trashcan\n\n        let footerData = this.footerDao.getInfo();\n\n        if (!footerData.treebrowserFolderCompact) compact = false;\n\n        //return this.artifactoryHttpClient.post(this.RESOURCE.TREE_BROWSER + '?compacted=' + (compact), node)\n        return this.artifactoryHttpClient.post(this.RESOURCE.TREE_BROWSER + '?compacted=' + (compact) + '&$no_spinner=true', _.extend({}, node, {/*limit: 5, */continueState, mustInclude, repositoryKeys}, filter, sorting))\n                .then(result => {\n                    return {\n                        data: this._transformData(result.data.data, parent),\n                        continueState: result.data.continueState\n                    }\n                });\n\n    }\n\n    // Wrap with TreeNode\n    // Recursively go over children if exist\n    // Assign the parent node\n    _transformData(data, parent) {\n        return data.map((node) => {\n            node = new this.TreeNode(node);\n            node.parent = parent;\n            if (_.isArray(node.children)) {\n                node.children = this.$q.when(this._transformData(node.children, node));\n            }\n            return node;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/tree_browser_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nconst ARCHIVE_MARKER = '!';\n\nexport function TreeNodeFactory($q, $injector, RESOURCE, ArtifactoryHttpClient, ArtifactWatchesDao, ArtifactActionsDao,\n        NativeBrowser, ArtifactXrayDao,ArtifactoryFeatures) {\n    return function (data) {\n        return new TreeNode(data, $q, $injector, RESOURCE, ArtifactoryHttpClient, ArtifactWatchesDao,\n                ArtifactActionsDao, NativeBrowser, ArtifactXrayDao,ArtifactoryFeatures)\n    }\n}\n\nclass TreeNode {\n    constructor(data, $q, $injector, RESOURCE, ArtifactoryHttpClient, ArtifactWatchesDao, ArtifactActionsDao,\n            NativeBrowser, ArtifactXrayDao, ArtifactoryFeatures) {\n        this.$q = $q;\n        this.treeBrowserDao = $injector.get('TreeBrowserDao');\n        this.RESOURCE = RESOURCE;\n        this.artifactoryHttpClient = ArtifactoryHttpClient;\n        this.artifactWatchesDao = ArtifactWatchesDao;\n        this.artifactActionsDao = ArtifactActionsDao;\n        this.nativeBrowser = NativeBrowser;\n        this.ArtifactXrayDao = ArtifactXrayDao;\n        this.features = ArtifactoryFeatures\n\n        // Wrap the data\n        angular.extend(this, data);\n\n        if (this.children) {\n            this.hasChild = true;\n        }\n        this._initIconType();\n        this._initFullpath();\n\n        this.className = 'TreeNode';\n\n        this.updateFavoriteState();\n    }\n\n    updateFavoriteState() {\n        let isFav = false;\n        if (!this.isRepo()) {\n            isFav = false;\n        } else if (localStorage.favoritesRepos) {\n            let favRepos = JSON.parse(localStorage.favoritesRepos);\n            if (_.contains(favRepos.favoritesRepos, this.repoKey)) {\n                isFav = true;\n            }\n        }\n        this.isFav = isFav;\n    }\n\n    _initIconType() {\n        if (!this.icon && this.compacted && this.isLocalFolder()) {\n            this.iconType = 'compactedFolder';\n        } else if (this.isTrashcan()) {\n            this.iconType = 'trashcan';\n        } else if (this.isRepoInTrashcan()) {\n            this.iconType = 'localRepository';\n        } else if (this.isBuildsInfoRepo()) {\n            this.iconType = 'buildInfoRepository';\n        } else if (this.isSupportBundleRepo()) {\n            this.iconType = 'supportBundleRepository';\n        } else if (this.isRepo()) {\n            switch (this.repoType) {\n                case 'virtual':\n                    this.iconType = 'virtualRepository';\n                    break;\n                case 'distribution':\n                    this.iconType = 'distributionRepository';\n                    break;\n                case 'releaseBundles':\n                    this.iconType = 'distributionRepository';\n                    break;\n                case 'remote':\n                    this.iconType = 'remoteRepository';\n                    break;\n                case 'cached':\n                    this.iconType = 'cachedRepository';\n                    break;\n                default:\n                    this.iconType = 'localRepository';\n            }\n        } else {\n            this.iconType = this.mimeType || this.icon || this.type;\n        }\n\n    }\n\n    _initFullpath() {\n        if (this.path == '') {\n            this.fullpath = this.repoKey;\n        } else {\n            let path = this.path;\n            if (this.archivePath) {\n                path = path.replace(this.archivePath, this.archivePath + ARCHIVE_MARKER);\n            }\n            this.fullpath = this.repoKey + \"/\" + path;\n        }\n    }\n\n    getRoot() {\n        return this.parent ? this.parent.getRoot() : this;\n    }\n\n    findNodeByPath(path, startIndex, includeArchives = true) {\n        if (startIndex === path.length) {\n            return this;\n        }\n        if (this.isArchive() && !includeArchives) {\n            return this;\n        }\n        // Find child:\n        return this.getChildren(true, null, path[startIndex]).then((children) => {\n            children = children.data || children;\n            while (startIndex != path.length) {\n                startIndex++;\n                let partialPath = path.slice(0, startIndex).join('/');\n                // TODO: remove second condition after Chen fixes server. Currently sometimes server returns path that ends with '/'\n                let child = _.findWhere(children, {path: partialPath}) || _.findWhere(children,\n                        {path: partialPath + '/'});\n                if (child) {\n                    return child;\n                }\n            }\n        })\n                .then((child) => {\n                    // Recursively look for rest of path:\n                    if (child) {\n                        return child.findNodeByPath(path, startIndex, includeArchives);\n                    } else {\n                        return this;\n                    }\n                }).catch(() => this);\n    }\n\n    isLocal() {\n        return this.local;\n    }\n\n    isFile() {\n        return this.type == 'file' || this.type == 'virtualRemoteFile';\n    }\n\n    isLocalFolder() {\n        return this.type == 'folder';\n    }\n\n    isFolder() {\n        return this.isLocalFolder() || this.type === 'virtualRemoteFolder';\n    }\n\n    isRepo() {\n        return this.type === 'repository' || this.type === 'virtualRemoteRepository';\n    }\n\n    isFavorite() {\n        return this.isFav;\n    }\n\n    isBuildsInfoRepo() {\n        return this.isRepo() && this.repoPkgType === 'BuildInfo';\n    }\n\n    isSupportBundleRepo() {\n        return this.isRepo() && this.repoPkgType === 'Support';\n    }\n\n    isInSupportBundle() {\n        return !this.isRepo() && this.repoType === 'supportBundles';\n    }\n\n    isTrashcan() {\n        return this.isRepo() && this.repoType === 'trash';\n    }\n\n    isInTrashcan() {\n        return !this.isRepo() && this.repoType === 'trash';\n    }\n\n    isRepoInTrashcan() {\n        return this.isInTrashcan() && !_.contains(this.path, '/');\n    }\n\n    isArchive() {\n        return (typeof this.fileType !== 'undefined' && this.fileType === 'archive');\n    }\n\n    isInsideArchive() {\n        return this.archivePath;\n    }\n\n    // If tabs or actions don't exist already - fetch them from the server\n    load(_self = this) {\n        let newPath = (this.type === \"folder\" && this.path.substr(-1) != \"/\") ? this.path + \"/\" : this.path;\n        if (this.tabs || this.actions) {\n            return this.$q.when(this);\n        } else {\n            let data = {\n                type: this.type,\n                repoPath: this.repoKey + \"/\" + newPath,\n                repoType: this.repoType || 'local',\n                repoPkgType: this.repoPkgType,\n                cached: this.cached\n            };\n            return this.artifactoryHttpClient.post(this.RESOURCE.TREE_BROWSER + \"/tabsAndActions\", data)\n                    .then((response) => {\n                        this.tabs = response.data.tabs;\n                        this.actions = response.data.actions;\n\n                        let xrayTab = _.find(this.tabs, (tab) => {\n                            return tab.name === 'Xray';\n                        });\n\n                        if (xrayTab) {\n\n                            this.ArtifactXrayDao.isArtifactBlockedAsync(\n                                    {repoKey: this.repoKey, path: response.data.repoPath.path})\n                                    .$promise.then((response) => {\n                            }, (err) => {\n                                xrayTab.class = \"marked\";\n                            })\n                        }\n                        if (this.features.isJCRDemo() && this.path.indexOf(\"manifest.json\") > -1) {\n                            this.tabs.push({name:\"Xray\",feature: \"xray\"})\n                        }\n\n                        let removeIndex = this.actions.indexOf(_.findWhere(this.actions, {name: \"NativeBrowser\"}));\n                        if (removeIndex !== -1) {\n                            this.actions.splice(removeIndex, 1);\n                        }\n\n                        let index = this.actions.indexOf(_.findWhere(this.actions, {name: \"Watch\"}));\n                        if (index === -1) {\n                            index = this.actions.indexOf(_.findWhere(this.actions, {name: \"Unwatch\"}));\n                        }\n                        if (index === -1) {\n                            index = this.actions.indexOf(_.findWhere(this.actions, {name: \"Move\"}));\n                        }\n                        if (index === -1) {\n                            index = this.actions.indexOf(_.findWhere(this.actions, {name: \"Refresh\"}));\n                        }\n                        if (this.nativeBrowser.isAllowed(this)) {\n                            this.actions.splice(index + 1, 0, {\n                                icon: \"icon-simple-browser\",\n                                name: \"NativeBrowser\",\n                                title: \"Native Browser\"\n                            });\n                        }\n\n                        let distAction = _.findWhere(this.actions, {name: 'Distribute'});\n                        if (distAction && this.repoType === 'distribution') {\n                            distAction.name = 'Redistribute';\n                        }\n\n\n                        return this;\n                    });\n        }\n\n    }\n\n    getDownloadPath() {\n        if (!this.downloadPathPromise) {\n            let data = {\n                repoKey: this.repoKey,\n                path: encodeURIComponent(this.downloadPath || this.path).replace(/%2F/g, '/')\n            };\n            this.downloadPathPromise = this.artifactActionsDao.perform({action: 'download'}, data).$promise\n                    .then((response) => {\n                        this.actualDownloadPath = response.data.path;\n                        if (response.data.xrayValidation) {\n                            this.xrayShouldValidate = response.data.xrayValidation;\n                        }\n                    });\n        }\n        return this.downloadPathPromise;\n    }\n\n    refreshWatchActions() {\n        // Can't watch archive / remote files\n        if (!this.isInsideArchive() && this.isLocal() && !this.isTrashcan() && !this.isInTrashcan() &&\n                !this.isSupportBundleRepo() && !this.isInSupportBundle()) {\n            return this.artifactWatchesDao.status({repoKey: this.repoKey, path: this.path})\n                    .$promise.then((action) => {\n                        //                    console.log(action);\n                        let previousAction = this._getWatchAction();\n                        if (action && action.name) {\n                            // Replace the previous action with the new one\n                            if (previousAction) {\n                                previousAction.name = action.name;\n                            }// Or add the new one if didn't exist before\n                            else {\n                                this.actions.push(action);\n                            }\n                        } else {\n                            // Remove the previous action if there is no new action\n                            if (previousAction) {\n                                _.remove(this.actions, previousAction);\n                            }\n                        }\n                        return this;\n                    });\n        } else {\n            return this.$q.when(this);\n        }\n    }\n\n    _getWatchAction() {\n        return _.find(this.actions, (action) => {\n            return _.contains(['Watch', 'Unwatch'], action.name);\n        });\n    }\n\n\n    invalidateChildren() {\n        this.children = null;\n    }\n\n    invalidateParent() {\n        if (this.parent) {\n            this.parent.invalidateChildren();\n        } else {\n            this.treeBrowserDao.invalidateRoots();\n        }\n    }\n\n    // Get the children of this node and cache the result\n    // or return the cached promise\n    getChildren(force = false, continueState, mustInclude) {\n        // Server errors if requesting children of file\n        // (simple browser always requests getChildren of current node)\n        if (this.isFile() && !this.isArchive()) {\n            return this.$q.when(null);\n        }\n\n        if (!this.children || (force && !this.isInsideArchive()) || this.isTrashcan()) {\n            // Load children from server, and cache them\n            this.children = this.treeBrowserDao._loadChildren({\n                type: \"junction\",\n                repoType: this.repoType,\n                repoKey: this.repoKey,\n                path: this.path,\n                text: this.text,\n                trashcan: this.isTrashcan()\n            }, this, continueState, {}, null, mustInclude);\n        }\n        return this.children;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/tree_node.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function RepoDataDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.REPO_DATA)\n            .setCustomActions({\n                getAllForPerms: {\n                    method: 'GET'\n                },\n                getAll: {\n                    method: 'GET',\n                    isArray: true,\n                    path: RESOURCE.REPO_DATA + \"?user=true\"\n                },\n                getForSearch: {\n                    method: 'GET',\n                    path: RESOURCE.REPO_DATA + \"?search=true\"\n                },\n                getForBackup: {\n                    method: 'GET',\n                    path: RESOURCE.REPO_DATA + \"?backup=true\"\n                },\n                getForPackageSearch: {\n                    method: 'GET',\n                    path: RESOURCE.REPO_DATA + \"?packageSearch=true\"\n                }\n            })\n\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/repo_data_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class CronTimeDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.CRON_TIME);\n        this.setCustomActions({\n            get: {\n                \"params\": {\n                    cron: '@cron',\n                    isReplication:'@isReplication'\n                }\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/cron_time_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class DateFormatDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.DATE_FORMAT);\n        this.setCustomActions({\n            get: {\n                \"params\": {\n                    dateformat: '@dateformat'\n                }\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/date_format_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class NameValidatorDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.NAME_VALIDATOR);\n        this.setCustomActions({\n            get: {\n                \"params\": {\n                    name: '@name'\n                }\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/name_validator_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class UniqueIdValidatorDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.UNIQUE_ID_VALIDATOR);\n        this.setCustomActions({\n            get: {\n                \"params\": {\n                    id: '@id'\n                }\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/unique_id_validator_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class XmlNameDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.XML_NAME_VALIDATOR);\n        this.setCustomActions({\n            get: {\n                \"params\": {\n                    xmlName: '@xmlName'\n                }\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/xml_name_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function ArtifactGeneralDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.ARTIFACT_GENERAL)\n        .setCustomActions({\n            'bintray': {\n                method: 'POST',\n                path: RESOURCE.ARTIFACT_GENERAL_BINTRAY,\n                params: {sha1: '@sha1', $no_spinner: true}\n            },\n            'bintrayDist': {\n                method: 'POST',\n                path: RESOURCE.ARTIFACT_GENERAL_BINTRAY_DIST,\n                params: {$no_spinner: true}\n            },\n            artifactsCount: {\n                method: 'POST',\n                path: RESOURCE.ARTIFACT_GENERAL + \"/artifactsCount\",\n                params: {$no_spinner: true},\n                notifications: false\n            }\n        }).getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_general_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../../artifactory_dao';\n\nexport class ArtifactPermissionsDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource,RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.ARTIFACT_PERMISSIONS);\n        this.setCustomActions({\n            query: {\n                isArray: false\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_permissions_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../../artifactory_dao';\n\nexport class ArtifactBuildsDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor) {\n        super($resource, RESOURCE,artifactoryNotificationsInterceptor);\n\n        this.setPath(RESOURCE.ARTIFACT_BUILDS);\n        this.setCustomActions({\n            'query': {\n                isArray: false\n            },\n            'getJson': {\n                path: RESOURCE.ARTIFACT_BUILDS + '/json',\n                transformResponse: (data) => {\n                    return {json: data};\n                }\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_builds_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../../artifactory_dao';\n\nexport class ArtifactViewSourceDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource,RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.ARTIFACT_VIEW_SOURCE);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_viewsource_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../../artifactory_dao';\n\nexport class ArtifactPropertyDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE, artifactoryNotificationsInterceptor) {\n        super($resource,RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.ARTIFACT_PROPERTIES +\"/:name\");\n        this.setCustomActions({\n            'query': {\n                isArray: false\n            },\n            'get': {\n                params: {name: '@name'}\n            },\n            'update': {\n                params: {name: '@name'}\n            },\n            'delete':{\n                params: {name: '@name'}\n            },\n            'deleteBatch': {\n                url: RESOURCE.API_URL+'/deleteproperties',\n                method: 'POST',\n                notifications:true\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_property_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ArtifactWatchesDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.ARTIFACT_WATCHES + \"/:name\")\n            .setCustomActions({\n                \"delete\": {\n                    method: 'POST',\n                    path: RESOURCE.ARTIFACT_WATCHES + \"/remove\"\n                },\n                status: {\n                    path: RESOURCE.ARTIFACT_WATCHES + \"/status\"\n                }\n            })\n            .getInstance();\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_watches_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactXrayDao} from '../../artifactory_dao';\n\nexport function ArtifactXrayDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'GET'})\n            .setPath(RESOURCE.ARTIFACT_XRAY)\n            .setCustomActions({\n                'getData': {\n                    params: {\n                        repoKey: '@repoKey',\n                        path: '@path'\n                    },\n                    notifications: true\n                },\n                'isBlocked': {\n                    path: RESOURCE.ARTIFACT_XRAY + '/isBlocked',\n                    params: {\n                        repoKey: '@repoKey',\n                        path: '@path'\n                    },\n                    notifications: true\n                },\n                'isArtifactBlockedAsync': {\n                    path: RESOURCE.ARTIFACT_XRAY + '/isBlocked',\n                    params: {\n                        $no_spinner: true,\n                        repoKey: '@repoKey',\n                        path: '@path'\n                    }\n                }\n            })\n            .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_xray_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ArtifactActionsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'POST'})\n        .setPath(RESOURCE.ARTIFACT_ACTIONS + '/:action')\n        .setCustomActions({\n                perform: {\n                    params: {action: '@action'},\n                    notifications: true\n                },\n                performGet: {\n                    method: 'GET',\n                    params: {action: '@action'},\n                    notifications: true\n                },\n                dryRun: {\n                    params: {action: '@action'}\n                },\n                getDeleteVersions: {\n                    method: 'GET',\n                    path: RESOURCE.ARTIFACT_ACTIONS + '/deleteversions',\n                    isArray: false,\n                    notifications: true\n                },\n                getSha256: {\n                    method: 'POST',\n                    path: RESOURCE.ARTIFACT_ACTIONS + '/addSha256',\n                    notifications: true\n                }\n        }).getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_actions_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class PredefineDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,ArtifactoryDaoFactory) {\n        super($resource, RESOURCE,ArtifactoryDaoFactory);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.PREDEFINE_VALUES + \"/:name\");\n        this.setCustomActions({\n            'get': {\n                params: {name: \"@name\"}\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/predefine_values_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class RepoPropertySetDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,ArtifactoryDaoFactory) {\n        super($resource, RESOURCE,ArtifactoryDaoFactory);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.REPO_PROPERTY_SET)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/repo_property_set_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ArtifactSearchDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.ARTIFACT_SEARCH + '/:search/:action')\n            .setCustomActions({\n                'fetch': {\n                    params: {search: '@search'},\n                    notifications:true\n                },\n                'get': {\n                    method: 'GET',\n                    isArray: true,\n                    params: {\n                        action: '@action',\n                        search: '@search'\n                    },\n                    notifications:true\n                },\n                'delete': {\n                    method: 'POST',\n                    params: {search: 'deleteArtifact'}\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_search_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ArtifactPackageSearchDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.ARTIFACT_SEARCH + '/pkg/:param')\n            .setCustomActions({\n                'availablePackages': {\n                    method: 'GET',\n                    isArray: true,\n                    params: {param: 'availablePackages'}\n                },\n                'queryFields': {\n                    method: 'GET',\n                    isArray: true,\n                    params: {param: '@packageType'}\n                },\n                'runQuery': {\n                    method: 'POST',\n                    notifications: true\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_package_search_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function DependencyDeclarationDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.DEPENDENCY_DECLARATION)\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/dependency_declaration_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ArtifactDeployDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.ARTIFACT + '/:action')\n            .setCustomActions({\n                'post': {\n                    method: 'POST',\n                    params: {\n                        action: '@action'\n                    },\n                    notifications: true\n                },\n                'cancelUpload': {\n                    method: 'POST',\n                    path: RESOURCE.ARTIFACT + \"/cancelupload\"\n                },\n                postBundle: {\n                    method: 'POST',\n                    path: RESOURCE.ARTIFACT + \"/:action/bundle\",\n                    params: {\n                        action: '@action'\n                    },\n                    notifications: true\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_deploy_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ArtifactViewsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.VIEWS+\"/:view\")\n            .setCustomActions({\n                'fetch':{\n                    method: 'POST',\n                    params:{view: '@view'}\n                },\n                'getDockerProxySnippet': {\n                    method: 'GET',\n                    path: RESOURCE.VIEWS + \"/dockerproxy/:repoKey\",\n                    params:{repoKey: '@repoKey'}\n                }\n            })\n            .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_views_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport EVENTS from '../../constants/artifacts_events.constants';\n\nconst VERSION_INFO_KEY = 'VERSION_INFO';\nexport class FooterDao {\n    constructor(RESOURCE, ArtifactoryDaoFactory, ArtifactoryStorage, $timeout, JFrogEventBus) {\n\t\tthis.storage = ArtifactoryStorage;\n        this.$timeout = $timeout;\n        this.JFrogEventBus = JFrogEventBus;\n    \tthis._resource = ArtifactoryDaoFactory()\n            .setPath(RESOURCE.FOOTER)\n            .getInstance();\n        this.retries = 0;\n    }\n\n    get(force = false) {\n\n        if (this.retries >= 10) return this.cached;\n\n        if (!this.cached || force) {\n            this.cached = this._resource.get().$promise\n                    .then(info => this._info = info);\n        }\n\n        //Fix for RTFACT-9873\n        if (!this._info) {\n            this.$timeout(()=> {\n                if (!this._info) {\n                    this.retries++;\n                    this.get(true).then(()=> {\n                        this.JFrogEventBus.dispatch(EVENTS.FOOTER_DATA_UPDATED);\n                    });\n                }\n                else if (this._info) {\n                    this.retries = 0;\n                }\n            }, 400);\n        }\n        else if (this._info) {\n            this.retries = 0;\n        }\n\n        return this.cached;\n    }\n\n    getInfo() {\n        return this._info;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/footer_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function CrowdIntegrationDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.CROWD)\n            .setCustomActions({\n                'test': {\n                    method: 'POST',\n                    path: RESOURCE.CROWD + \"/test\",\n                    notifications: true\n                },\n                'refresh': {\n                    method: 'POST',\n                    path: RESOURCE.CROWD + \"/refresh/:name\",\n                    params: {name: '@name'},\n                    notifications: true\n                },\n                'import': {\n                    method: 'POST',\n                    path: RESOURCE.CROWD + \"/import\",\n                    notifications: true\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/crowd_integration_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ExportDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.EXPORT + '/:action')\n            .setCustomActions({\n                'save': {\n                    method: 'POST',\n                    params: {\n                        action: '@action'\n                    },\n                    notifications: true\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/export_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ImportDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.IMPORT + '/:action')\n            .setCustomActions({\n                'save': {\n                    method: 'POST',\n                    params: {\n                        action: '@action'\n                    },\n                    notifications: true\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/import_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function MaintenanceDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.MAINTENANCE + '/:module')\n            .setCustomActions({\n                perform: {\n                    params: {module: '@module'},\n                    notifications: true\n                }\n            }).getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/maintenance_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function LdapDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.LDAP + \"/:action/:key\")\n            .setCustomActions({\n                'save':{\n                    method: 'POST'\n                },\n                'get':{\n                    method: 'GET',\n                    params: {key: '@key'}\n                },\n                'update':{\n                    method: 'PUT',\n                    params: {key: '@key'}\n                },\n                'delete':{\n                    method: 'DELETE',\n                    params: {key: '@key'}\n                },\n                'test':{\n                    method: 'POST',\n                    params: {key: '@key', action: 'test'},\n                    notifications: true\n                },\n                'reorder':{\n                    method: 'POST',\n                    path: RESOURCE.LDAP + \"/reorder\"\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/ldap_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function DockerStatusDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.DOCKER_STATUS)\n            .setCustomActions({\n                'get':{\n                    method: 'GET'\n                }\n            });\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/docker_status_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function LdapGroupsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.LDAP_GROUPS + \"/:name/:action/:username\")\n            .setCustomActions({\n                'get':{\n                    params: {name: '@name'}\n                },\n                'update':{\n                    params: {name: '@name'}\n                },\n                'delete':{\n                    params: {name: '@name'}\n                },\n                'refresh':{\n                    method: 'POST',\n                    isArray: true,\n                    params: {name: '@name', action: 'refresh', username: '@username'},\n                    notifications: true\n                },\n                'import':{\n                    method: 'POST',\n                    params: {name: '@name', action: 'import'},\n                    notifications: true\n                },\n                'getstrategy':{\n                    method: 'GET',\n                    params: {name: '@name', action: 'strategy'}\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/ldap_groups_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function PushToBintrayDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.PUSH_TO_BINTRAY + \"/:param1/:param2/:param3/:param4\")\n        .setCustomActions({\n            'getBuildRepos': {\n                method: 'GET'\n            },\n            'getBuildPacks': {\n                method: 'GET',\n                params: {param1: 'build', param2: 'pkg'}\n            },\n            'getBuildVersions': {\n                method: 'GET',\n                params: {param1: 'build', param2: 'versions'}\n            },\n            'pushBuildToBintray': {\n                method: 'POST',\n                notifications: true,\n                params: {param1: 'build', param2: '@buildName', param3: '@buildNumber', param4: '@buildTime'}\n            },\n            'getArtifactData': {\n                method: 'GET',\n                params: {param1: 'artifact'}\n            },\n            'pushArtifactToBintray': {\n                method: 'POST',\n                notifications: true,\n                params: {param1: 'artifact', param2: '@repoKey', param3: '@path'}\n            },\n            'pushDockerTagToBintray': {\n                method: 'POST',\n                notifications: true,\n                params: {param1: 'dockerTag', param2: '@repoKey', param3: '@path'}\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/push_to_bintray_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function DistributionDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.BINTRAY_DISTRIBUTION + \"/:action\")\n        .setCustomActions({\n            'distributeArtifact': {\n                method: 'POST',\n                notifications: true,\n                params: {action: 'distributeArtifact'}\n            },\n            'distributeBuild': {\n                method: 'POST',\n                notifications: true,\n                params: {action: 'distributeBuild'}\n            },\n            'getAvailableDistributionRepos': {\n                method: 'GET',\n                params: {action: 'getAvailableDistributionRepos'},\n                notifications: true,\n                isArray: false\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/distribution_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function GeneralConfigDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'POST'})\n        .setPath(RESOURCE.GENERAL_CONFIG + \"/:param\")\n        .setCustomActions({\n            'deleteLogo': {\n                method: 'DELETE',\n                params: {param: 'logo'}\n            },\n                getData: {\n                    method: 'GET',\n                    path: RESOURCE.GENERAL_CONFIG + \"/data\"\n                }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/general_config_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function SigningKeysDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'GET'})\n        .setPath(RESOURCE.SIGNINGKEYS + \"/:action\")\n        .setCustomActions({\n            'delete': {\n                method: 'DELETE',\n                params: {'public': '@public'}\n            },\n            post: {\n                method: 'POST',\n                params: {'action': '@action'},\n                notifications: true\n            },\n            postWithoutNotifications: {\n                method: 'POST',\n                params: {action: '@action'},\n                notifications: false\n            },\n            put: {\n                method: 'PUT',\n                params: {'action': '@action'},\n                notifications: true\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/signing_keys_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function TrustedKeysDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'GET'})\n        .setPath(RESOURCE.TRUSTEDKEYS)\n        .setCustomActions({\n            'getTrustedKeys': {\n                method: 'GET',\n\t            isArray: true\n            },\n            'AddTrustedKey': {\n                method: 'POST',\n                params: {'public_key': '@key', 'alias': '@alias'},\n\t            notifications: true\n            },\n            'deleteTrustedKey': {\n            \tpath: RESOURCE.TRUSTEDKEYS + '/delete',\n\t            method: 'POST',\n\t            params: {'key_id': '@key_id'},\n\t            notifications: true\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/trusted_keys_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function AccessTokensDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.ACCESSTOKENS + '/:action')\n            .setCustomActions({\n                'getTokens': {\n                    method: 'GET',\n                    params: {action: 'tokens'},\n                    isArray: true\n                },\n                'revokeTokens': {\n                    method: 'POST',\n                    notifications: true,\n                    params: {action: 'revokeTokens'}\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/access_tokens_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function KeystoreDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'GET'})\n        .setPath(RESOURCE.KEYSTORE+\"/:action\")\n        .setCustomActions({\n            'delete':{\n                method: 'DELETE',\n                params:{'public':'@public'}\n            },\n            post:{\n                method: 'POST',\n                params:{'action':'@action'},\n                notifications: true\n            },\n            updatePassword: {\n                method: 'PUT',\n                notifications: true\n            },\n            removeKeystore: {\n                method: 'DELETE',\n                notifications: true\n            },\n            removeKeypair: {\n                method: 'DELETE',\n                params: {'name': '@name'},\n                notifications: true\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/keystore_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function BuildsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n\n        .setPath(RESOURCE.BUILDS + \"/:action/:subAction/:name/:number/:time/:moduleId\")\n        .setCustomActions({\n\n            getData: {\n                method: 'GET',\n                isArray: false,\n                params: {action: '@action', subAction: '@subAction',name: '@name', number: '@number', time: '@time', moduleId: '@moduleId'}\n            },\n            lastBuild: {\n                method: 'GET',\n                isArray: false,\n                params: {action: 'buildInfo', name: '@name', number: '@number'}\n            },\n            getDataArray: {\n                method: 'GET',\n                isArray: true,\n                params: {action: '@action', subAction: '@subAction', name: '@name', number: '@number', time: '@time', moduleId: '@moduleId'}\n            },\n            delete:{\n                method: 'POST',\n                notifications: true,\n                params: {action: 'buildsDelete'}\n            },\n            deleteAll:{\n                method: 'POST',\n                notifications: true,\n                params: {action: 'deleteAllBuilds'}\n            },\n            overrideLicenses:{\n                method: 'PUT',\n                params: {action: 'overrideLicenses', name: '@name', number: '@number', time: '@time'}\n            },\n            buildEffectivePermission: {\n                method: 'GET',\n                params: {action: 'buildEffectivePermission', name: '@name', number: '@buildNumber', time: '@startTime'}\n            },\n            getAllBuildsNames: {\n                method: 'GET',\n                isArray: true,\n                params: {action: 'names'}\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/builds/builds_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function BundlesDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.BUNDLES + \"/:type/:name/:version\")\n        .setCustomActions({\n            getData: {\n                method: 'GET',\n                isArray: false,\n                params: {type : '@type', name: '@name'}\n            },\n            getBundleVersions: {\n                method: 'GET',\n                isArray: false,\n                params: {type : '@type', name: '@name'}\n            },\n            getBundleData: {\n                method: 'GET',\n                isArray: false,\n                params: {type : '@type', name: '@name', version: '@version'}\n            },\n            deleteBundles: {\n                method: 'DELETE',\n                isArray: false,\n                params: {type : '@type', name: '@name', version: '@version'}\n            }\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/bundles_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function UserProfileDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'POST'})\n        .setPath(RESOURCE.USER_PROFILE)\n        .setCustomActions({\n            fetch: {\n                notifications: true\n            },\n            getApiKey: {\n                method: 'GET',\n                path: RESOURCE.USER_API_KEY + '/:user',\n                params: {user: '@username'},\n                authenticate: true\n            },\n            hasApiKey: {\n                method: 'HEAD',\n                path: RESOURCE.USER_API_KEY + '/:user',\n                params: {user: '@username'}\n            },\n            getAndCreateApiKey: {\n                method: 'POST',\n                path: RESOURCE.USER_API_KEY,\n                params: {user: '@username'},\n                authenticate: true\n            },\n            regenerateApiKey: {\n                method: 'PUT',\n                path: RESOURCE.USER_API_KEY,\n                params: {user: '@username'},\n                authenticate: true\n            },\n            revokeApiKey: {\n                method: 'DELETE',\n                path: RESOURCE.USER_API_KEY + '/:user',\n                params: {user: '@username'},\n                notifications: true,\n                authenticate: true\n            }\n        }).getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/user_profile_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {ArtifactoryDao} from '../artifactory_dao';\n\nexport class PermissionsDao extends ArtifactoryDao {\n\n    constructor($resource, RESOURCE,artifactoryNotificationsInterceptor)\n    {\n        super($resource, RESOURCE, artifactoryNotificationsInterceptor);\n\n        this.setUrl(RESOURCE.API_URL + RESOURCE.PERMISSION_TARGETS + '/:action/:name');\n\n        this.setCustomActions({\n            getAll: {\n                method: 'GET'\n            },\n            getEntity:{\n                method: 'GET',\n                params:{action:'@action',name:'@name'},\n                isArray: true\n            },\n            getResource:{\n                method: 'GET',\n                params:{action:'@action',name:'@name'},\n            },\n            getAllUsersAndGroups: {\n                method: 'GET',\n                params: {action: 'allUsersGroups'}\n            },\n            getPermission: {\n                method: 'GET',\n                params: {name: '@name'}\n            },\n            deletePermission: {\n                method: 'POST',\n                params: {action:'delete'},\n                notifications: true\n            },\n            update: {\n                method: 'PUT',\n                params: {name: '@name'}\n            },\n            create: {\n                method: 'POST',\n                notifications: true\n            },\n            getEntityPermissions: {\n                method: 'POST',\n                isArray: true,\n                params: {action: '@entity_type',name: '@name'}\n            },\n            buildPatterns: {\n                method: 'POST',\n                params: {action: 'buildPatterns'}\n            },\n            getBuildGlobalBasicReadAllowed: {\n                method: 'GET',\n                params: {action: 'getBuildGlobalBasicReadAllowed'}\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/permissions_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ChecksumsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'POST'})\n        .setPath(RESOURCE.CHECKSUMS + \"/:action\")\n        .setCustomActions({\n            'fix': {\n                method: 'POST',\n                params: {action: 'fix'},\n                notifications: true\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/checksums_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function FilteredResourceDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'POST'})\n        .setPath(RESOURCE.FILTERED_RESOURCE)\n        .setCustomActions({\n            'setFiltered': {\n                method: 'POST'\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/filtered_resource_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function ArtifactLicensesDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.GENERAL_TAB_LICENSES + '/:action')\n        .setCustomActions({\n            'getLicenses': {\n                method: 'GET',\n                isArray: true\n            },\n            setLicenses: {\n                method: 'PUT',\n                isArray: false,\n                path: RESOURCE.GENERAL_TAB_LICENSES + '/setLicensesOnPath',\n                notifications: true\n            },\n            scanArtifact: {\n                method: 'GET',\n                isArray: true,\n                path: RESOURCE.GENERAL_TAB_LICENSES + '/scanArtifact',\n                notifications: true\n            },\n            queryCodeCenter: {\n                method: 'POST',\n                params: {\n                    repoKey: '@repoKey',\n                    path: '@path'\n                },\n                path: RESOURCE.GENERAL_TAB_LICENSES + '/queryCodeCenter',\n                notifications: true\n            },\n            getArchiveLicenseFile: {\n                method: 'GET',\n                path: RESOURCE.GENERAL_TAB_LICENSES + '/getArchiveLicenseFile',\n                transformResponse:(data)=>{ return {data: data} }\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/artifact/artifact_licenses_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function HomePageDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setCustomActions({\n            'get': {\n                method: 'GET',\n                params: {$no_spinner: true}\n            }\n        })\n        .setPath(RESOURCE.HOME_PAGE + '/widget/:widgetName')\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/home_page_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function SetMeUpDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'GET'})\n        .setPath(RESOURCE.SET_ME_UP)\n        .setCustomActions({\n            fetch: {\n                notifications: true\n            },\n            maven : {\n                path : RESOURCE.SET_ME_UP_MAVEN\n            },\n            gradle : {\n                path : RESOURCE.SET_ME_UP_GRADLE\n            },\n            ivy : {\n                path : RESOURCE.SET_ME_UP_IVY\n            },\n            maven_distribution : {\n              path : RESOURCE.SET_ME_UP_MAVEN_DISTRIBUTION,\n              method : \"GET\"\n            },\n            maven_snippet : {\n                path : RESOURCE.SET_ME_UP_MAVEN_SNIPPET,\n                method : \"POST\"\n            },\n            gradle_snippet : {\n                path : RESOURCE.SET_ME_UP_GRADLE_SNIPPET,\n                method : \"POST\"\n            },\n            ivy_snippet : {\n                path : RESOURCE.SET_ME_UP_IVY_SNIPPET,\n                method : \"POST\"\n            },\n            reverse_proxy_data : {\n                path : RESOURCE.SET_ME_UP_REVERSE_PROXY_DATA,\n                method : \"GET\"\n            }\n        }).getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/set_me_up_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function BasicConfigDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'GET'})\n        .setPath(RESOURCE.BASIC_CONFIG)\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/basic_config_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function SystemLogsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'GET'})\n        .setPath(RESOURCE.SYSTEM_LOGS + \"/:action\")\n        .setCustomActions({\n            'getLogs': {\n                method: 'GET',\n                params: {action: 'initialize'}\n            },\n            'getLogData': {\n                method: 'GET',\n                params: {action: 'logData'}\n            },\n            'getDownloadLink': {\n                method: 'GET',\n                params: {action: 'downloadFile'}\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/system_logs_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function RepositoriesDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.REPOSITORIES)\n            .setCustomActions({\n                getRepositories: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/:type/info',\n                    isArray: true,\n                    params: {type: '@repoType'}\n                },\n                getRepository: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/:type/:repoKey',\n                    params: {type: '@repoType', repoKey: '@repoKey'}\n                },\n                deleteRepository: {\n                    method: 'DELETE',\n                    path: RESOURCE.REPOSITORIES + '/:repoKey/delete',\n                    params: {repoKey: '@repoKey'},\n                    notifications: true\n                },\n                getAvailableChoicesOptions: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/availablechoices'\n                },\n                getDefaultValues: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/defaultvalues'\n                },\n                repoKeyValidator: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/validatereponame'\n                },\n                testRemoteUrl: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/testremote',\n                    notifications: true\n                },\n                detectSmartRepository: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/discoversmartrepocapabilities',\n                },\n                testLocalReplication: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/testlocalreplication',\n                    notifications: true\n                },\n                testRemoteReplication: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/testremotereplication',\n                    notifications: true\n                },\n                executeReplicationNow: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/executereplicationnow',\n                    params: {replicationUrl: '@replicationUrl', repoKey: '@repoKey'},\n                    notifications: true\n                },\n                executeRemoteReplicationNow: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/exeucteremotereplication',\n                    params: {replicationUrl: '@replicationUrl', repoKey: '@repoKey'},\n                    notifications: true\n                },\n                runNowReplications: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/executeall', params: {repoKey: '@repoKey'},\n                    notifications: true\n                },\n                remoteUrlToRepoMap: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/remoteUrlMap'\n                },\n                availableRepositoriesByType: {\n                    method: 'GET',\n                    params: {type: '@type', repoKey: '@repoKey'},\n                    path: RESOURCE.REPOSITORIES + '/availablerepositories'\n                },\n                indexerAvailableRepositories: {\n                    method: 'GET',\n                    params: {type: '@type', layout: '@layout'},\n                    path: RESOURCE.REPOSITORIES + '/indexeravailablerepositories'\n                },\n                getResolvedRepositories: {\n                    method: 'POST',\n                    isArray: true,\n                    params: {type: '@repoType', repoKey: '@repoKey'},\n                    path: RESOURCE.REPOSITORIES + '/resolvedrepositories'\n                },\n                isReplicationValid: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/validatelocalreplication',\n                    notifications: true\n                },\n                reorderRepositories: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/:repoType/reorderrepositories',\n                    params: {\n                        repoType: '@repoType',\n                        $no_spinner: true\n                    }\n                },\n                createDefaultJcenterRepo: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/createdefaultjcenterrepo',\n                    notifications: true,\n                    params: {\n                        $no_spinner: false\n                    }\n                },\n                isJcenterRepoConfigured: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/isjcenterconfigured',\n                    notifications: false,\n                    params: {\n                        $no_spinner: true\n                    }\n                },\n                saveBintrayOauthConfig: {\n                    method: 'PUT',\n                    path: RESOURCE.REPOSITORIES + '/savebintrayoauthconfig',\n                    notifications: true\n                },\n                checkBintrayAuthentication: {\n                    method: 'GET',\n                    path: RESOURCE.REPOSITORIES + '/checkbintrayrepauth',\n                    notifications: false\n                },\n                testDistributionRules: {\n                    method: 'POST',\n                    path: RESOURCE.REPOSITORIES + '/testdistributionrule',\n                    notifications: true,\n                    params: {testPath : '@testPath', productName: '@productName'}\n                }\n            })\n            .extendPrototype({\n                isType: function (...types) {\n                    return this.typeSpecific && this.typeSpecific.repoType && _.contains(types,\n                                    this.typeSpecific.repoType.toLowerCase());\n                },\n                isGitProvider: function (gitProvider) {\n                    return this.typeSpecific && this.typeSpecific.gitProvider && gitProvider == this.typeSpecific.gitProvider.toLowerCase();\n                }\n            })\n            .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/repositories_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function RepositoriesLayoutsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.REPOSITORIES_LAYOUTS + '/:action/:name')\n        .setCustomActions({\n            getLayouts: {\n                method: 'GET',\n                isArray: true\n            },\n            getLayoutData: {\n                method: 'GET',\n                params: {name: '@layoutName'}\n            },\n            deleteLayout: {\n                method: 'DELETE',\n                params: {name: '@layoutName'},\n                notifications: true\n            },\n            testArtifactPath: {\n                method: 'POST',\n                params: {action: 'testArtPath'},\n                notifications: true\n            },\n            resolveRegex: {\n                method: 'POST',\n                params: {action: 'resolveRegex'}\n            }\n\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/repositories_layouts_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function HaDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.HIGH_AVAILABILITY + '/:id')\n            .setCustomActions({\n            \t'delete': {\n            \t\tparams: {id: '@id'}\n\t\t\t\t}\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/ha_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class HaLicensesDao {\n    constructor(RESOURCE, ArtifactoryDaoFactory) {\n        return ArtifactoryDaoFactory()\n                .setPath(RESOURCE.MANAGE_HA_LICENSES + \"/:action\")\n                .setCustomActions({\n                    'add': {\n                        method: 'POST',\n                        notifications: true, // This is for the 'toaster' to catch the error and display the message\n                        params: {action: 'add'},\n                    },\n                    'getLicenses': {\n                        method: 'GET',\n                        notifications: true,\n                        params: {action: 'details'},\n                    },\n                    'replace': {\n                        method: 'POST',\n                        notifications: true,\n                        params: {action: 'replace'},\n                    },\n                    'delete': {\n                        method: 'POST',\n                        notifications: true,\n                        params: {action: 'remove'}\n                    }\n                })\n                .getInstance();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/ha_licenses_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function StashResultsDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'GET'})\n            .setPath(RESOURCE.STASH_RESULTS)\n            .setCustomActions({\n                'get': {\n                    method: 'GET',\n                    isArray: true\n                },\n                'save': {\n                    method: 'POST',\n                    notifications: true\n                },\n                'delete': {\n                    method: 'DELETE'\n                },\n                'add': {\n                    path: RESOURCE.STASH_RESULTS + \"/add\",\n                    notifications: true,\n                    method: 'POST'\n                },\n                'subtract': {\n                    path: RESOURCE.STASH_RESULTS + \"/subtract\",\n                    notifications: true,\n                    method: 'POST'\n                },\n                'intersect': {\n                    path: RESOURCE.STASH_RESULTS + \"/intersect\",\n                    notifications: true,\n                    method: 'POST'\n                },\n                'export': {\n                    path: RESOURCE.STASH_RESULTS + \"/export\",\n                    notifications: true,\n                    method: 'POST'\n                },\n                'discard': {\n                    path: RESOURCE.STASH_RESULTS + \"/discard\",\n                    notifications: true,\n                    method: 'POST'\n                },\n                'copy': {\n                    path: RESOURCE.STASH_RESULTS + \"/copy\",\n                    notifications: true,\n                    method: 'POST'\n                },\n                'move': {\n                    path: RESOURCE.STASH_RESULTS + \"/move\",\n                    notifications: true,\n                    method: 'POST'\n                },\n                'silentCopy': {\n                    path: RESOURCE.STASH_RESULTS + \"/copy\",\n                    method: 'POST'\n                },\n                'silentMove': {\n                    path: RESOURCE.STASH_RESULTS + \"/move\",\n                    method: 'POST'\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/stash_results_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function OAuthDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.OAUTH + \"/:p1/:p2/:p3/:p4\")\n            .setCustomActions({\n                'get':{\n                    method: 'GET'\n                },\n                'update':{\n                    method: 'POST',\n                    notifications: true\n                },\n                'createProvider':{\n                    method: 'PUT',\n                    params: {p1: 'provider'},\n                    notifications: true\n                },\n                'updateProvider':{\n                    method: 'POST',\n                    params: {p1: 'provider'},\n                    notifications: true\n                },\n                'deleteProvider':{\n                    method: 'DELETE',\n                    params: {p1: 'provider', p2: '@provider'},\n                    notifications: true\n                },\n                'getUserTokens':{\n                    method: 'GET',\n                    isArray: true,\n                    params: {p1: 'user', p2: 'tokens'}\n                },\n                'deleteUserToken':{\n                    method: 'DELETE',\n                    params: {p1: 'user', p2: 'tokens', p3: '@username', p4: '@provider'}\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/oauth_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function SupportPageDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.SUPPORT_PAGE + '/:action/:bundleId')\n            .setCustomActions({\n                'generateBundle': {\n                    method: 'POST',\n                    params: {action: 'generateBundle'},\n                    notifications: true\n                },\n                'listBundles': {\n                    method: 'GET',\n                    isArray: true,\n                    params: {action: 'listBundles'}\n                },\n                'deleteBundle': {\n                    method: 'DELETE',\n                    params: {action: 'deleteBundle', bundleId: '@bundleId'}\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/support_page_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function ServerTimeDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.SERVER_TIME)\n            .setCustomActions({\n            \t'get': {\n                    method: 'GET'\n\t\t\t\t}\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/server_time_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function SshClientDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setDefaults({method: 'POST'})\n        .setPath(RESOURCE.SSH_CLIENT)\n        .setCustomActions({\n            fetch: {\n                notifications: true\n            }\n        }).getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/ssh_client_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function BinaryProvidersInfoDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.BINARY_PROVIDERS_INFO)\n            .setCustomActions({\n                'get':{\n                    method: 'GET'\n                }\n            });\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/binary_providers_info_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function XrayDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setPath(RESOURCE.XRAY + '/:action')\n            .setCustomActions({\n                'getNoneIndex': {\n                    method: 'GET',\n                    params: {action: 'getNoneIndex'},\n                    isArray: true\n                },\n                'getIndex': {\n                    method: 'GET',\n                    params: {action: 'getIndex'},\n                    isArray: true\n                },\n                'addIndex': {\n                    method: 'POST',\n                    params: {action: 'addIndex'}\n                },\n                'removeIndex': {\n                    method: 'POST',\n                    params: {action: 'removeIndex'}\n                },\n                'updateRepositories': {\n                    method: 'PUT',\n                    params: {action: 'indexRepos'}\n                },\n                'getConf': {\n                    path: RESOURCE.XRAY_CONFIG,\n                    method: 'GET'\n                },\n                'getIntegrationConfig': {\n                    method: 'GET',\n                    params: {action: 'getIntegrationConfig'}\n                },\n                'setXrayEnabled': {\n                    method: 'POST',\n                    params: {action: 'setXrayEnabled'}\n                },\n                'xrayAllowWhenUnavailable': {\n                    method: 'POST',\n                    params: {action: 'setAllowWhenUnavailable'}\n                },\n                'xrayAllowBlocked': {\n                    method: 'POST',\n                    params: {action: 'setAllowBlockedArtifactsDownload'}\n                },\n                'setBypassDefaultProxy': {\n                    method: 'POST',\n                    params: {action: 'setBypassDefaultProxy'}\n                },\n                'updateXrayProxy': {\n                    method: 'POST',\n                    params: {action: 'updateProxy', proxyKey: 'proxyKey'}\n                }\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/xray_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function GlobalReplicationsConfigDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.GLOBAL_REPLICATIONS_BLOCK)\n        .setCustomActions({\n            'status': {\n                method: 'GET'\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/global_replications_config_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function SumoLogicConfigDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.SUMOLOGIC + '/:action')\n        .setCustomActions({\n            'registerSumoLogicApplication': {\n                method: 'POST',\n                params: {action: 'registerSumoLogicApplication'},\n                notifications: true\n            },\n            'setupSumoLogicApplication': {\n                method: 'POST',\n                params: {action: 'setupSumoLogicApplication'},\n                notifications: true\n            },\n            'refreshToken': {\n                method: 'POST',\n                params: {action: 'refreshToken'},\n                notifications: true\n            },\n            'reset': {\n                method: 'POST',\n                params: {action: 'reset'},\n                notifications: true\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/sumologic_config_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport function OnboardingDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n        .setPath(RESOURCE.ONBOARDING + \"/:param\")\n        .setCustomActions({\n            'initStatus': {\n                method: 'GET',\n                params: {param: 'initStatus'}\n            },\n            'reposStates': {\n                method: 'GET',\n                params: {param: 'reposStates'}\n            },\n            'createDefaultRepos': {\n                method: 'POST',\n                params: {param: 'createDefaultRepos'}\n            }\n        })\n        .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/onboarding_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * Created by tomere on 08/06/2017.\n */\n\nexport function SslCertificateDao(RESOURCE, ArtifactoryDaoFactory) {\n    return ArtifactoryDaoFactory()\n            .setDefaults({method: 'POST'})\n            .setPath(RESOURCE.SSLCERTIFICATES + \"/:action\")\n            .setCustomActions({\n                'add': {\n                    method: 'POST',\n                    notifications: true,\n                    isArray: true,\n                    params: {action: 'add'},\n                },\n                'delete': {\n                    method: 'POST',\n                    notifications: true,\n                    //isArray: true,\n                    params: {action: 'delete'}\n                },\n                'getDetails': {\n                    method: 'GET',\n                    notifications: true,\n                    isArray: false,\n                    params: {action: 'details'},\n                },\n                'getAllCertificates': {\n                    method: 'GET',\n                    notifications: true,\n                    isArray: true,\n                    params: {action: 'getAllCertificates'},\n                },\n            })\n            .getInstance();\n}\n\n\n// WEBPACK FOOTER //\n// ./data/dao/ssl_certificates_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport class PackagesDAO {\n    constructor(RESOURCE, ArtifactoryDaoFactory) {\n        let path  = `${RESOURCE.API_URL}/v1/native`;\n        let pathV2  = `${RESOURCE.API_URL}/v2/native`;\n        return ArtifactoryDaoFactory()\n                .setPath(path)\n                .setCustomActions({\n                    'showExtraInfo': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/packages/show_extra_info`,\n                    },\n                    'getPackages': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/packages/:packageType`,\n                    },\n                    'getPackagesMds': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${pathV2}/packages/:packageType`,\n                    },\n                    'getPackagesCount': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/packages/:packageType/count_packages`,\n                        params: {\n                            packageType: '@packageType',\n                        },\n                    },\n                    'getRepos': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/repos/:packageType`,\n                        params: {\n                            packageType: '@packageType',\n                        },\n                    },\n                    'getPackage': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/versions/:packageType`,\n                        params: {\n                            packageType: '@packageType',\n                        }\n                    },\n\n                    'getPackageMds': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${pathV2}/versions/:packageType`,\n                        params: {\n                            packageType: '@packageType',\n                        }\n                    },\n                    'getPackageSummary': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/packages/:packageType/summary`,\n                        params: {\n                            packageType: '@packageType',\n                        }\n                    },\n                    'getPackageSummaryExtraInfo': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/packages/:packageType/summary/extra_info`,\n                        params: {\n                            packageType: '@packageType',\n                        }\n                    },\n                    'getPackageDownloadsCount': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/packages/:packageType/total_downloads`,\n                        params: {\n                            packageType: '@packageType'\n                        }\n                    },\n                    'getDockerPackageExtraInfo': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/packages/:packageType/extra_info`,\n                        params: {\n                            packageType: '@packageType'\n                        }\n                    },\n                    'getPackageExtraInfo': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/packages/:packageType/extra_info`,\n                        params: {\n                            packageType: '@packageType'\n                        },\n                        cancellable: true\n                    },\n                    'getVersionDownloadsCount': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/versions/:packageType/total_downloads/:repo`,\n                        params: {\n                            packageType: '@packageType',\n\t                        repo: '@repo'\n                        }\n                    },\n                    'getVersion': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/versions/:packageType/:repo`,\n                        params: {\n                            packageType: '@packageType',\n                            repo: '@repo'\n                        },\n                        urlOptions: {encodeUri: false}\n                    },\n                    'getVersionMds': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${pathV2}/versions/:packageType/:repo`,\n                        params: {\n                            packageType: '@packageType',\n                            repo: '@repo'\n                        },\n                        urlOptions: {encodeUri: false}\n                    },\n                    'getVersionData': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/versions/:packageType/:dataType`,\n                        params: {\n                            packageType: '@packageType',\n                            dataType: '@dataType'\n                        }\n                    },\n                    'getVersionExtraInfo': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/versions/:packageType/extra_info`,\n                        params: {\n                            packageType: '@packageType'\n                        },\n                        cancellable: true\n                    },\n                    'getVersionSummary': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/versions/:packageType/summary`,\n                        params: {\n                            packageType: '@packageType',\n                        }\n                    },\n                    'getVersionSummaryExtraInfo': {\n                        method: 'POST',\n                        notifications: false,\n                        url: `${path}/versions/:packageType/summary/extra_info`,\n                        params: {\n                            packageType: '@packageType',\n                        }\n                    },\n                    'getManifest': {\n                        method: 'GET',\n                        notifications: false,\n                        url: `${path}/versions/:packageType/:repo`,\n                        params: {\n                            packageType: '@packageType',\n                            repoKey: '@repo'\n                        },\n                    }\n                })\n                .getInstance();\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/packages_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function JcrEulaDao(RESOURCE, ArtifactoryDaoFactory) {\n\treturn ArtifactoryDaoFactory()\n    \t.setPath(RESOURCE.JCR_EULA + \"/:action\")\n        .setCustomActions({\n            'get': {\n                method : 'get'\n            },\n            'required': {\n                method : 'get',\n                params : {action: 'required'}\n            },\n            'accept': {\n                method : 'POST',\n                params : {action: 'accept'}\n            },\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/jcr_eula_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function JcrNewsletterDao(RESOURCE, ArtifactoryDaoFactory) {\n\treturn ArtifactoryDaoFactory()\n    \t.setPath(RESOURCE.JCR_NEWSLETTER + \"/:action\")\n        .setCustomActions({\n\t\t\t'getSubscription': {\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: {action: 'getSubscription'}\n\t\t\t},\n\t\t\t'setSubscription': {\n\t\t\t\tmethod : 'PUT',\n\t\t\t\tparams: {action: 'setSubscription'}\n\t\t\t}\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/jcr_newsletter_dao.js","/*\n *\n * Artifactory is a binaries repository manager.\n * Copyright (C) 2018 JFrog Ltd.\n *\n * Artifactory is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * Artifactory is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Artifactory.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport function MiniXrayDao(RESOURCE, ArtifactoryDaoFactory) {\n\treturn ArtifactoryDaoFactory()\n    \t.setPath(RESOURCE.MINI_XRAY + \"/:action\")\n        .setCustomActions({\n            'getSecurityVulnerabilites': {\n                method : 'post',\n                path:'/jcr/xray/paginatedIssues?direction=asc&num_of_rows=1000&order_by=version&page_num=1',\n                params : {action: 'paginatedIssues?direction=asc&num_of_rows=1000&order_by=version&page_num=1'}\n            },\n            'getSecurityImpactGraph': {\n                method : 'post',\n                params : {action: 'impactPath'}\n            },\n            'getSecurityDetails': {\n                method : 'post',\n                params : {action: 'issueDetails'}\n            },\n        })\n        .getInstance();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./data/dao/mini_xray_dao.js"],"sourceRoot":""}